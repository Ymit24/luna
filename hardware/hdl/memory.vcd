$date
	Thu Nov 14 18:33:45 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module memory_tb $end
$var wire 16 ! reg_m_out [15:0] $end
$var wire 16 " reg_d_out [15:0] $end
$var wire 16 # reg_a_out [15:0] $end
$var reg 13 $ addr [12:0] $end
$var reg 1 % clk $end
$var reg 16 & data_in [15:0] $end
$var reg 1 ' reg_a_en $end
$var reg 1 ( reg_d_en $end
$var reg 1 ) reg_m_en $end
$scope module uut $end
$var wire 13 * addr [12:0] $end
$var wire 1 % clk $end
$var wire 16 + data_in [15:0] $end
$var wire 1 ' reg_a_en $end
$var wire 16 , reg_a_out [15:0] $end
$var wire 1 ( reg_d_en $end
$var wire 16 - reg_d_out [15:0] $end
$var wire 1 ) reg_m_en $end
$var wire 16 . reg_m_out [15:0] $end
$var reg 16 / reg_a [15:0] $end
$var reg 16 0 reg_d [15:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx 0
bx /
bx .
bx -
bx ,
b0 +
b0 *
0)
0(
0'
b0 &
0%
b0 $
bx #
bx "
bx !
$end
#5000
1%
#10000
0%
1'
b1001000110100 &
b1001000110100 +
#15000
b1001000110100 #
b1001000110100 ,
b1001000110100 /
1%
#20000
0%
0'
#25000
1%
#30000
0%
#35000
1%
#40000
0%
1(
b101011001111000 &
b101011001111000 +
#45000
b101011001111000 "
b101011001111000 -
b101011001111000 0
1%
#50000
0%
0(
#55000
1%
#60000
0%
#65000
1%
#70000
0%
1)
b1001101010111100 &
b1001101010111100 +
#75000
b1001101010111100 !
b1001101010111100 .
1%
#80000
0%
bx !
bx .
b1 $
b1 *
#85000
b1001101010111100 !
b1001101010111100 .
1%
#90000
0%
0)
#95000
1%
#100000
0%
#105000
1%
#110000
0%
#115000
1%
#120000
0%
