$date
	Thu Nov 14 12:42:20 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module alu_tb $end
$var wire 16 ! output_result [15:0] $end
$var reg 1 " clk $end
$var reg 1 # negate_output $end
$var reg 2 $ opcode [1:0] $end
$var reg 16 % x [15:0] $end
$var reg 16 & y [15:0] $end
$var reg 1 ' zero_x $end
$var reg 1 ( zero_y $end
$scope module uut $end
$var wire 1 " clk $end
$var wire 1 # negate_output $end
$var wire 2 ) opcode [1:0] $end
$var wire 16 * x [15:0] $end
$var wire 16 + y [15:0] $end
$var wire 1 ' zero_x $end
$var wire 1 ( zero_y $end
$var wire 16 , output_result [15:0] $end
$var wire 16 - effective_y [15:0] $end
$var wire 16 . effective_x [15:0] $end
$var parameter 2 / OPCODE_ADD $end
$var parameter 2 0 OPCODE_AND $end
$var parameter 2 1 OPCODE_OR $end
$var parameter 2 2 OPCODE_SUB $end
$var reg 16 3 internal_output [15:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11 2
b0 1
b1 0
b10 /
$end
#0
$dumpvars
b111 3
b10 .
b101 -
b111 ,
b101 +
b10 *
b10 )
0(
0'
b101 &
b10 %
b10 $
0#
1"
b111 !
$end
#5
0"
#10
1"
#15
0"
#20
1"
#25
0"
#30
b10101 !
b10101 ,
b10101 3
b10000 .
1"
b10000 %
b10000 *
#35
0"
#40
1"
#45
0"
#50
1"
#55
0"
#60
1"
#65
0"
#70
b101 !
b101 ,
b101 3
b0 .
1"
1'
#75
0"
#80
1"
#85
0"
#90
1"
#95
0"
#100
1"
#105
0"
#110
1"
#115
0"
#120
1"
