$date
  Sat Sep 21 23:12:25 2024
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module commonpkg $end
$upscope $end
$scope module alu_tb $end
$var reg 16 ! x[15:0] $end
$var reg 16 " y[15:0] $end
$var reg 16 # result[15:0] $end
$var reg 2 $ op[1:0] $end
$var reg 1 % zx $end
$var reg 1 & zy $end
$var reg 1 ' no $end
$var reg 1 ( isneg $end
$var reg 1 ) iszero $end
$scope module uut $end
$var reg 16 * x[15:0] $end
$var reg 16 + y[15:0] $end
$var reg 2 , op[1:0] $end
$var reg 1 - zx $end
$var reg 1 . zy $end
$var reg 1 / no $end
$var reg 16 0 result[15:0] $end
$var reg 1 1 isneg $end
$var reg 1 2 iszero $end
$comment opcode is not handled $end
$var reg 16 3 intermediate_result[15:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b0000000000000001 !
b0000000000000010 "
b0000000000000011 #
b00 $
0%
0&
0'
0(
0)
b0000000000000001 *
b0000000000000010 +
b00 ,
0-
0.
0/
b0000000000000011 0
01
02
b0000000000000011 3
#10000000
b01 $
b01 ,
#20000000
b1111111111111111 #
b10 $
1(
b10 ,
b1111111111111111 0
11
b1111111111111111 3
#30000000
b0000000000000000 #
b11 $
0(
b11 ,
b0000000000000000 0
01
b0000000000000000 3
#40000000
b0000000000000011 #
b00 $
1%
1)
b00 ,
1-
b0000000000000011 0
12
b0000000000000011 3
#50000000
0%
1&
0)
0-
1.
02
#60000000
1'
1/
#70000000
b0000000000000010 !
b0000000000000100 "
b0000000000000110 #
b01 $
0'
b0000000000000010 *
b0000000000000100 +
b01 ,
0/
b0000000000000110 0
b0000000000000110 3
#80000000
b0000000000000000 !
b0000000000000000 "
b0000000000000000 #
b00 $
b0000000000000000 *
b0000000000000000 +
b00 ,
b0000000000000000 0
b0000000000000000 3
#90000000
