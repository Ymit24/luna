const puts = fn@extern["puts"](fmt: *i8):i32;
const printf = fn@extern["printf"]@variadic(fmt: *i8): i32;

const pair = struct { a: i32, b: i32 };
const triple = struct { x: i32, y: i32, z: i32 };
const complex = struct { first: pair, second: triple };

const sum = fn(x: i32, y: i32): i32 {
    return x + y;
};

const foo = struct {
    thing: fn(in: i32): i32
};

const main = fn(): i32 {
    puts("hello world");
    let p: pair = .pair {
        a: sum(1,9),
        b: 8
    };

    printf("pair: %d,%d\n", p.a, p.b);

    let t: triple = .triple {
        x: 5,
        y: sum(2,2),
        z: 9
    };

    printf("triple: %d,%d,%d\n", t.x, t.y, t.z);

    let c = .complex {
        first: p,
        second: t
    };

    printf(
        "complex: %d, %d || %d,%d,%d\n",
        c.first.a,
        c.first.b,
        c.second.x,
        c.second.y,
        c.second.z
    );

    const addone = fn(x: i32): i32 { return 1 + x; };
    const f = .foo { thing: addone };
    const tt = f.thing;

    printf("calling thing on 3=%d\n", tt(3));

    return 0;
};

