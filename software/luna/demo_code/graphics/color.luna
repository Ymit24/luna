const gfx_color = mod {
    const Color = struct { r: u8, g: u8, b: u8, a: u8 };

    const rgb = fn(r: u8, g: u8, b: u8): Color { return Color { r: r, g: g, b: b, a: 255 }; };
    const rgba = fn(r: u8, g: u8, b: u8, a: u8): Color { return Color { r: r, g: g, b: b, a: a }; };

    const to_u32 = fn(c: Color): u32 { return ((c.a as u32) << 24) | ((c.r as u32) << 16) | ((c.g as u32) << 8) | (c.b as u32); };

    const blend_over = fn(dst: u32, src: Color): u32 {
        const da = (dst >> 24) & 0xff;
        const dr = (dst >> 16) & 0xff;
        const dg = (dst >> 8) & 0xff;
        const db = (dst) & 0xff;
        const sa = src.a as u32;
        const inv = 255 - sa;
        const r = (src.r as u32 * sa + dr * inv) / 255;
        const g = (src.g as u32 * sa + dg * inv) / 255;
        const b = (src.b as u32 * sa + db * inv) / 255;
        const a = (sa + da * inv / 255);
        return (a << 24) | (r << 16) | (g << 8) | b;
    };
};
